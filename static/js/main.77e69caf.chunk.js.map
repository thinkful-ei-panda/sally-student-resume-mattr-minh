{"version":3,"sources":["sally-student-resume-pic.jpg","Header.js","Bio.js","Education.js","Work.js","Contact.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","name","src","img","Bio","Education","Work","Contact","href","Footer","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4IAAAA,EAAOC,QAAU,IAA0B,sD,8KCa5BC,MAVf,SAAgBC,GACZ,OACI,gCACI,4BAAKA,EAAMC,MACX,yBAAKC,IAAKC,MACV,4DCIKC,MATjB,WACI,OACE,iCACI,yCACA,iSCOKC,MAZf,WACI,OACI,iCACA,yCACE,+DACA,oDACA,mEACA,qECOKC,MAdf,WACI,OACI,iCACA,4CACE,2CACA,wDACC,gQACD,uDACA,qDACC,kQCEIC,MAVf,WACI,OACI,iCACI,qDACA,qCAAU,uBAAGC,KAAK,iCAAR,2BACV,oDCEGC,MARf,WACI,OACI,gCACI,gECqBGC,MAjBf,WAGE,OACE,yBAAKC,UAAU,OACb,8BACA,kBAAC,EAAD,CAAQV,KAAK,kBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCRcW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.77e69caf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sally-student-resume-pic.07b44746.jpg\";","import React from 'react';\r\nimport img from './sally-student-resume-pic.jpg';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header>\r\n            <h1>{props.name}</h1>\r\n            <img src={img} />\r\n            <address> Manhattan, New York </address>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n// import './App.css';\r\n\r\nfunction Bio() {\r\n    return (\r\n      <article>\r\n          <h2>Biography</h2>\r\n          <p>Sally Student was born on April 12, 1987 in Long Island, New York, USA as Ilana Rose Glazer. She is an actress and writer, known for Rough Night (2017), Broad City (2014) and Broad City (2010). She has been married to David Rooklin since February 25, 2017.</p>\r\n        </article>\r\n    );\r\n  }\r\n  \r\n  export default Bio;\r\n  ","import React from 'react';\r\n\r\nfunction Education() {\r\n    return (\r\n        <section>\r\n        <h2>Education</h2>\r\n          <h3> 2020 Thinkful Coding Boot Camp</h3>\r\n          <p> Software Engineering</p>\r\n          <h3>2010-1014 Pulaski Technical College</h3>\r\n          <p> Bachelor's degree in Communications</p>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Education","import React from 'react';\r\n\r\nfunction Work() {\r\n    return (\r\n        <section>\r\n        <h2>Work History</h2>\r\n          <h3>Broad City </h3>\r\n          <p> 2014 - current , Actress</p>\r\n           <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Vitae veritatis sed laborum, accusantium ut dolore asperiores ea enim, hic fuga corporis? Id cupiditate, voluptatibus veniam doloribus consectetur quia! Quae, eveniet?</p>\r\n          <h3>Blue Hill (Short Film) </h3>\r\n          <p> 2012, Actress/ Writer</p>\r\n           <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Vitae veritatis sed laborum, accusantium ut dolore asperiores ea enim, hic fuga corporis? Id cupiditate, voluptatibus veniam doloribus consectetur quia! Quae, eveniet?</p>     \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Work","\r\nimport React from 'react';\r\n\r\nfunction Contact() {\r\n    return (\r\n        <section>\r\n            <h2>Contact Sally Student</h2>\r\n            <p>Email: <a href=\"mailto:sallystudent@gmail.com\">sallystudent@gmail.com</a></p>\r\n            <p>Phone: 888-550-6672</p>     \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Contact","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <span>Copyright Sally Student 2020</span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\nimport './App.css';\nimport Header from './Header'\nimport Bio from './Bio';\nimport Education from './Education';\nimport Work from './Work';\nimport Contact from './Contact';\nimport Footer from './Footer'\n\nfunction App() {\n  const name = \"Blake\";\n\n  return (\n    <div className=\"App\">\n      <main>\n      <Header name='sally-student'/>\n      <Bio />\n      <Education />\n      <Work />\n      <Contact />\n      <Footer />\n      </main>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}